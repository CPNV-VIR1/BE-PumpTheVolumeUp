services:
  ptvu-be-music:
    build:
      context: .
      dockerfile: ./musics/Dockerfile
    restart: always
    networks:
      - backend
    expose:
      - 8080
    volumes:
      - ./musics/prod-application.properties:/app/application.properties
      - ptvu-musics:/app/musics
    depends_on:
      ptvu-db:
        condition: service_healthy

  ptvu-frontend:
    build:
      context: .
      dockerfile: ./FE-PumpTheVolumUp/Dockerfile
    restart: always
    networks:
      - backend
    expose:
      - 3000
    depends_on:
      - ptvu-be-music
      - ptvu-be-streaming

  proxy:
    image: nginx:stable-perl
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
    networks:
      - backend
    depends_on:
      - ptvu-be-music
      - ptvu-be-streaming

  ptvu-be-streaming:
    build:
      context: .
      dockerfile: ./streaming/Dockerfile
    expose:
      - 8000
    volumes:
      - ptvu-musics:/app/musics
    networks:
      - backend
    depends_on:
      - ptvu-be-music

  ptvu-db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - backend
    expose:
      - 3306
    volumes:
      - ptvu-db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  ptvu-db:
  ptvu-musics:

networks:
  backend:
    driver: bridge
