services:
  ptvu-be-music:
    build:
      context: .
      dockerfile: ./musics/Dockerfile
    restart: always
    networks:
      - backend
    expose:
      - 8080
    volumes:
      - ./musics/prod-application.properties:/app/application.properties
      - ptvu-musics:/app/musics
    depends_on:
      ptvu-db:
        condition: service_healthy

  proxy:
    image: nginx:stable-perl
    restart: always
    ports:
      - "${APP_PORT}:80"
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
    networks:
      - backend
      - auth
    depends_on:
      - ptvu-be-music
      - ptvu-be-streaming
      - auth

  auth:
    image: quay.io/keycloak/keycloak:26.2.4
    restart: always
    environment:
      - KC_BOOTSTRAP_ADMIN_USERNAME=${KEYCLOAK_ADMIN}
      - KC_BOOTSTRAP_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    volumes:
      - ./keycloak:/opt/keycloak/data/import
    command: -v start-dev --import-realm jdbc:h2:file:/opt/keycloak/data/h2/keycloakdb;NON_KEYWORDS=VALUE;AUTO_SERVER=true'
    ports:
      - "9000:8080"
    expose:
      - 8080
    networks:
      - auth

  ptvu-be-streaming:
    build:
      context: .
      dockerfile: ./streaming/Dockerfile
    restart: always
    expose:
      - 8000
    volumes:
      - ptvu-musics:/app/musics
    networks:
      - backend
    depends_on:
      - ptvu-be-music

  ptvu-db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_RANDOM_ROOT_PASSWORD=yes
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - backend
    expose:
      - 3306
    volumes:
      - ptvu-db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

volumes:
  ptvu-db:
  ptvu-musics:
  auth_postgres:

networks:
  backend:
    driver: bridge
  auth:
    driver: bridge
